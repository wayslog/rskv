name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Check for unused dependencies
      run: |
        cargo install cargo-udeps
        cargo +nightly udeps --all-targets --all-features
      continue-on-error: true

    - name: Check for security vulnerabilities
      run: |
        cargo install cargo-audit
        cargo audit
      continue-on-error: true

    - name: Check for license compatibility
      run: |
        cargo install cargo-deny
        cargo deny check
      continue-on-error: true

    - name: Generate dependency graph
      run: |
        cargo install cargo-deps
        cargo deps --all-deps --include-orphans | dot -Tpng > deps.png
      continue-on-error: true

    - name: Upload dependency graph
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dependency-graph
        path: deps.png

  complexity:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Install cargo-geiger
      run: cargo install cargo-geiger

    - name: Run security audit
      run: cargo geiger --all-features
      continue-on-error: true

    - name: Install cargo-machete
      run: cargo install cargo-machete

    - name: Check for unused dependencies
      run: cargo machete
      continue-on-error: true
